# generate the basic latex resume (the one Mark Pallone uses) 
# sample output:
# 
#   http://dl.dropbox.com/u/55016710/pallone-resume.pdf
# 
# Note that the resume generated by generateLatexResume() depends on the files:
#
#   res.cls
#   helvetica.sty
# 
# for proper formatting (although I think some TeX distributions will output
# a more or less correct final product).  
#
# TODO - make a list of things this resume disregards, such as title, emails,
# phone numbers, beyond the first one, etc. 

import json
from jsonResumeUtils import *


def testFn():
    f = open("mark_json.json", "r")
    stuff = json.load(f)
    print generateLatexResume(stuff)

# given a json dictionary object (generated by saying "json.load(file)"), 
# return latex resume source code.
#
# recall that for proper formatting, the resume generated by this function 
# will require the res.cls and helvetica.sty files.
def generateLatexResume(jsonDict):
    resume = "\n\n"

    # file header stuff
    resume += "% Remember to use the res.cls and helvetica.sty files.\n" 
    resume += "\n"
    resume += "\documentclass[line,margin]{res}\n"
    resume += "%\usepackage{helvetica} % uses helvetica postscript font\n"
    resume += "%(download helvetica.sty)\n"
    resume += "%\usepackage{newcent}"
    resume += "   % uses new century schoolbook postscript font \n"

    # name and address
    # 
    # TODO 
    # \hfill doesn't work inside of the \address{ } field, so the 
    # separation between the email address and the phone number
    # is awkward. This can probably be fixed by messing with the 
    # res.cls file. 
    # 
    # Also, the res.cls file only allows two lines of address, which
    # makes fitting multiple email addresses in the \address{ } space 
    # awkward. 
    resume += "\n\n"
    name = jsonDict["first"] + " " + jsonDict["last"]
    resume += "\\name{" + name + "}\n"
    
    # address - only including the first one, due to how "difficult"
    # the \address{} environment is for this latex class
    address = ""
    addressList = jsonDict["contact"]["addresses"]
    if addressList:
        address += addressList[0]["street"] + "; "
        address += addressList[0]["city"] + ", "
        address += addressList[0]["state"] + " "
        address += addressList[0]["zip"]
    resume += "\\address{" + address + "}\n"
    
    # email and phone - only including the first of each for the same reason
    email = ""
    emailList = jsonDict["contact"]["emails"]
    if emailList:
        email += emailList[0]["adress"]
    
    phone = ""
    phoneList = jsonDict["contact"]["phone_numers"]
    if phoneList:
        phone += phoneList[0]["number"]
    resume += "\\address{ \\tt " + email + " --- \\rm " + phone + "}"
    
    # start adding the categories and their relevant information
    # TODO - do this next


    resume += "\n\n"
    return resume
    
    


testFn()
